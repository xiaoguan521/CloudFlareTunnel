name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'  # Eclipse Temurin JDK
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: target/*.jar
        retention-days: 1

  docker:
    needs: build  # 依赖于 build 任务完成
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  # 只在推送到主分支时构建 Docker 镜像，不在 PR 中构建
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: app-jar
        path: target
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKER_HUB_USERNAME }}/cloudflare-tunnel
        tags: |
          type=raw,value=latest
          type=sha,format=short
          type=ref,event=branch
          type=semver,pattern={{version}}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 